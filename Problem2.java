/**
 * Even Fibonacci numbers
 * Problem 2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem2 extends Problem{

    private int max = 4000000;
    
    public Problem2() {
        super(2);
        this.setSolve(true);
    }

    private int checkEven() {
        int total = 0;
        for(int x = 0; x < generateSequence().length; x++) {
            if(generateSequence()[x] % 2 == 0) {total += generateSequence()[x];}
        }
        return total;
    }

    public int[] generateSequence() {
        int current = 2;
        int previous = 1;
        int holder = 0;
        int total = 1;
        while(current < max) {
            holder = current;
            current += previous;
            previous = holder;
            total++;
        }
        int[] sequence = new int[total];
        sequence[0] = 1;
        current = 2;
        previous = 1;
        holder = 0;
        total = 1;
        while(current < max) {
            sequence[total] = current;
            holder = current;
            current += previous;
            previous = holder;
            total++;
        }
        return sequence;
    }

    public int returnSolution() {
        return checkEven();
    }
}